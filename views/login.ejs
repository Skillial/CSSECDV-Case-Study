<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login / Sign Up</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
        }
    </style>
</head>

<body class="bg-gray-100 flex items-center justify-center min-h-screen p-4 font-sans">
    <div class="bg-white flex flex-col md:flex-row rounded-3xl shadow-2xl overflow-hidden max-w-4xl w-full">
        <!-- Left Panel: Image -->
        <div class="md:w-1/2 p-6 hidden md:flex items-center justify-center bg-white">
            <img class="rounded-2xl max-w-full h-auto object-cover" src="https://placehold.co/600x400/F0F0F0/333333?text=Welcome+Back!"
                onerror="this.onerror=null;this.src='https://placehold.co/600x400/F8F8F8/333333?text=Image+Not+Found';"
                alt="Placeholder for logo or abstract design">
        </div>

        <!-- Right Panel: Form -->
        <div class="md:w-1/2 p-8 sm:p-12 flex flex-col justify-center">
            <h2 class="font-extrabold text-3xl text-center text-gray-900 mb-2">Welcome Back!</h2>
            <p class="text-sm text-center text-gray-700 mb-8">Sign in to your account or create a new one.</p>

            <!-- Unified Error/Success Message Display -->
            <div id="unifiedMessageDisplay" class="px-4 py-3 rounded-xl relative text-sm text-center mb-4 hidden" role="alert">
                <!-- Content will be set by EJS for server-side messages -->
            </div>

            <form id="loginForm" action="/login" method="POST" class="flex flex-col gap-5">
                <!-- Username Input -->
                <div class="relative">
                    <input value="manager1"
                        class="w-full p-3 pr-10 rounded-xl border border-gray-300 bg-gray-50 focus:outline-none focus:ring-2 focus:ring-gray-400 focus:border-transparent transition duration-200 text-gray-800"
                        type="text" name="username" placeholder="Username" aria-label="username" required>
                </div>

                <!-- Password Input -->
                <div class="relative">
                    <input id="passwordInput" value="aaaaaA@3"
                        class="w-full p-3 pr-10 rounded-xl border border-gray-300 bg-gray-50 focus:outline-none focus:ring-2 focus:ring-gray-400 focus:border-transparent transition duration-200 text-gray-800"
                        type="password" name="password" placeholder="Password" aria-label="Password" required>
                    <!-- SVG icons -->
                    <svg id="togglePassword"
                        class="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500 cursor-pointer"
                        xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none"
                        stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <!-- Base eye icon (always visible) -->
                        <path d="M2 12s3-7 10-7 10 7 10 7-3 7-10 7-10-7-10-7Z"></path>
                        <circle cx="12" cy="12" r="3"></circle>
                        <!-- The slash, which is toggled on and off -->
                        <path id="eyeSlashPath" class="hidden" d="M1 1l22 22"></path>
                    </svg>
                </div>

                <button
                    class="bg-gray-900 text-white py-3 rounded-xl font-semibold hover:bg-gray-700 transition duration-300 ease-in-out transform hover:scale-105 shadow-md"
                    type="submit">
                    Login
                </button>
            </form>

            <div class="mt-5 text-xs text-center text-gray-600">
                <a href="/forget/password" class="hover:underline">Forgot your password?</a>
            </div>

            <div class="mt-8 text-sm flex flex-col sm:flex-row justify-between items-center text-gray-700">
                <p class="mb-3 sm:mb-0">Don't have an account?</p>
                <button onclick="window.location.href='/register'"
                    class="py-2 px-6 bg-white border border-gray-400 text-gray-800 rounded-xl font-semibold hover:bg-gray-100 transition duration-300 ease-in-out transform hover:scale-105 shadow-sm">
                    Sign Up
                </button>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const passwordInput = document.getElementById('passwordInput');
            const togglePassword = document.getElementById('togglePassword');
            const eyeSlashPath = document.getElementById('eyeSlashPath');
            const unifiedMessageDisplay = document.getElementById('unifiedMessageDisplay'); // Get the unified message display div

            togglePassword.addEventListener('click', function () {
                const isPassword = passwordInput.type === 'password';
                passwordInput.type = isPassword ? 'text' : 'password';
                eyeSlashPath.classList.toggle('hidden');
            });

            // Function to display messages in the unified message area
            function showUnifiedMessage(message, type = 'error') { // type can be 'error' or 'success'
                unifiedMessageDisplay.innerHTML = `<p>${message}</p>`;
                unifiedMessageDisplay.classList.remove('hidden', 'bg-red-100', 'border-red-400', 'text-red-700', 'bg-green-100', 'border-green-400', 'text-green-700');
                if (type === 'error') {
                    unifiedMessageDisplay.classList.add('bg-red-100', 'border-red-400', 'text-red-700');
                } else if (type === 'success') {
                    unifiedMessageDisplay.classList.add('bg-green-100', 'border-green-400', 'text-green-700');
                }
            }

            // Function to hide the unified message area
            function hideUnifiedMessage() {
                unifiedMessageDisplay.classList.add('hidden');
                unifiedMessageDisplay.innerHTML = ''; // Clear content
            }

            // --- Initial Load: Display server-side flash messages if any ---
            // This relies on EJS to pass error_messages and success_messages from the server.
            <% if (error_messages && error_messages.length > 0) { %>
                showUnifiedMessage(`<%= error_messages[0].replace(/`/g, '\\`') %>`, 'error');
            <% } else if (success_messages && success_messages.length > 0) { %>
                showUnifiedMessage(`<%= success_messages[0].replace(/`/g, '\\`') %>`, 'success');
            <% } else { %>
                hideUnifiedMessage();
            <% } %>

            // Hide messages when user starts typing in username or password fields
            document.querySelector('input[name="username"]').addEventListener('input', hideUnifiedMessage);
            document.querySelector('input[name="password"]').addEventListener('input', hideUnifiedMessage);
        });
    </script>

</body>

</html>
